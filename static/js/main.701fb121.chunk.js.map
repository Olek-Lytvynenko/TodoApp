{"version":3,"sources":["types/FilterType.ts","components/FilteredTodos.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/TodoApp.tsx","App.tsx","index.tsx"],"names":["FilterType","TodosFilter","todoFilterType","setFilterType","handleFilterType","useCallback","event","newStatus","preventDefault","className","data-cy","href","classNames","selected","All","onClick","Active","Completed","TodoItem","todo","onDeleteTodo","onCompleted","onRenameTodo","id","title","completed","useState","todoTitle","setTodoTitle","isEditSelctedTitleTodo","setIsEditSelctedTitleTodo","onSetTodoTitle","onEditTitleOnKeyDown","key","editing","type","checked","onChange","onDoubleClick","value","target","onBlur","onKeyDown","ref","input","focus","TodoList","todos","map","TodoApp","JSON","parse","localStorage","getItem","setTodos","setTitle","setTodoFilterType","saveNewTodos","newTodos","setItem","stringify","activeTodos","filter","length","filteredTodos","useMemo","handleCheckAll","deleteTodo","item","changeTodo","find","newTodo","deleteCompleted","action","onSubmit","Date","trim","placeholder","htmlFor","newTitle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.701fb121.chunk.js","sourcesContent":["// eslint-disable-next-line no-shadow\nexport enum FilterType {\n  All,\n  Active,\n  Completed,\n}\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport { FilterType } from '../types/FilterType';\n\ntype Props = {\n  todoFilterType: FilterType;\n  setFilterType: (newType: FilterType) => void;\n};\n\nexport const TodosFilter: React.FC<Props> = ({\n  todoFilterType,\n  setFilterType,\n}) => {\n  const handleFilterType = useCallback(\n    (event: React.MouseEvent, newStatus: FilterType) => {\n      event.preventDefault();\n\n      setFilterType(newStatus);\n    }, [todoFilterType],\n  );\n\n  return (\n    <ul className=\"filters\" data-cy=\"todosFilter\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames('',\n            { selected: FilterType.All === todoFilterType })}\n          onClick={event => handleFilterType(event, FilterType.All)}\n        >\n          All\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/active\"\n          className={classNames('',\n            { selected: FilterType.Active === todoFilterType })}\n          onClick={event => handleFilterType(event, FilterType.Active)}\n        >\n          Active\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames('',\n            { selected: FilterType.Completed === todoFilterType })}\n          onClick={event => handleFilterType(event, FilterType.Completed)}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  onDeleteTodo: (id: number) => void;\n  onCompleted: (id: number) => void;\n  onRenameTodo: (id: number, newTitle: string) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  onDeleteTodo,\n  onCompleted,\n  onRenameTodo,\n}) => {\n  const { id, title, completed } = todo;\n  const [todoTitle, setTodoTitle] = useState(todo.title);\n  const [isEditSelctedTitleTodo, setIsEditSelctedTitleTodo] = useState(false);\n\n  const onSetTodoTitle = useCallback(() => {\n    setIsEditSelctedTitleTodo(false);\n    if (title !== todoTitle) {\n      onRenameTodo(id, todoTitle);\n    }\n  }, [todoTitle]);\n\n  const onEditTitleOnKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        setIsEditSelctedTitleTodo(false);\n        setTodoTitle(title);\n      }\n\n      if (event.key === 'Enter') {\n        setIsEditSelctedTitleTodo(false);\n        onSetTodoTitle();\n      }\n    }, [todoTitle],\n  );\n\n  return (\n    <li\n      className={classNames(\n        {\n          completed,\n          editing: isEditSelctedTitleTodo,\n        },\n      )}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => onCompleted(id)}\n        />\n        <label onDoubleClick={() => setIsEditSelctedTitleTodo(true)}>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          onClick={() => onDeleteTodo(id)}\n        />\n      </div>\n      {isEditSelctedTitleTodo && (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={todoTitle}\n          onChange={event => setTodoTitle(event.target.value)}\n          onBlur={onSetTodoTitle}\n          onKeyDown={onEditTitleOnKeyDown}\n          ref={input => input && input.focus()}\n        />\n      )}\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoItem } from './TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  onDeleteTodo: (id: number) => void;\n  onCompleted: (id: number) => void;\n  onRenameTodo: (id: number, newTitle: string) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onDeleteTodo,\n  onCompleted,\n  onRenameTodo,\n}) => {\n  return (\n    <ul className=\"todo-list\" data-cy=\"todosList\">\n      {todos.map((todo) => (\n        <TodoItem\n          todo={todo}\n          onDeleteTodo={onDeleteTodo}\n          onCompleted={onCompleted}\n          onRenameTodo={onRenameTodo}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { FilterType } from '../types/FilterType';\nimport { Todo } from '../types/Todo';\nimport { TodosFilter } from './FilteredTodos';\nimport { TodoList } from './TodoList';\n\nexport const TodoApp: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(\n    JSON.parse(localStorage.getItem('todos') || '[]'),\n  );\n  const [title, setTitle] = useState('');\n  const [todoFilterType, setTodoFilterType] = useState(FilterType.All);\n\n  const saveNewTodos = (newTodos: Todo[]) => {\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n    setTodos(newTodos);\n  };\n\n  const activeTodos = todos.filter((todo) => !todo.completed).length;\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title) {\n      const newTodo: Todo = {\n        id: +new Date(),\n        title: title.trim(),\n        completed: false,\n      };\n\n      saveNewTodos([...todos, newTodo]);\n      setTitle('');\n    }\n  };\n\n  const filteredTodos = useMemo(() => {\n    switch (todoFilterType) {\n      case FilterType.Completed:\n        return todos.filter((todo) => todo.completed);\n\n      case FilterType.Active:\n        return todos.filter((todo) => !todo.completed);\n\n      case FilterType.All:\n      default:\n        return [...todos];\n    }\n  }, [todos, todoFilterType]);\n\n  const handleCheckAll = useCallback(() => {\n    saveNewTodos(\n      todos.map((todo) => ({\n        ...todo,\n        completed: activeTodos !== 0,\n      })),\n    );\n  }, [todos, activeTodos]);\n\n  const onDeleteTodo = (id: number) => {\n    const deleteTodo = todos.filter((item) => item.id !== id);\n\n    saveNewTodos(deleteTodo);\n  };\n\n  const onCompleted = useCallback(\n    (id: number) => {\n      const newTodos = [...todos];\n      const changeTodo = newTodos.find((newTodo) => newTodo.id === id);\n\n      if (changeTodo) {\n        changeTodo.completed = !changeTodo.completed;\n      }\n\n      saveNewTodos(newTodos);\n    },\n    [todos],\n  );\n\n  const deleteCompleted = useCallback(() => {\n    saveNewTodos(todos.filter((todo) => !todo.completed));\n  }, [todos]);\n\n  const onRenameTodo = (id: number, newTitle: string) => {\n    if (!newTitle.trim()) {\n      onDeleteTodo(id);\n\n      return;\n    }\n\n    const newTodos = todos.map((todo) => {\n      return (\n        todo.id === id\n          ? { ...todo, title: newTitle.trim() }\n          : todo\n      );\n    });\n\n    saveNewTodos(newTodos);\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form action=\"\" onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            data-cy=\"createTodo\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={event => setTitle(event.target.value)}\n          />\n        </form>\n      </header>\n\n      {todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              data-cy=\"toggleAll\"\n              checked={activeTodos === 0}\n              onChange={handleCheckAll}\n            />\n\n            <label htmlFor=\"toggle-all\"> </label>\n\n            <TodoList\n              todos={filteredTodos}\n              onDeleteTodo={onDeleteTodo}\n              onCompleted={onCompleted}\n              onRenameTodo={onRenameTodo}\n            />\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\" data-cy=\"todosCounter\">\n              {`${activeTodos} item${activeTodos !== 1 ? 's' : ''} left`}\n            </span>\n\n            <TodosFilter\n              todoFilterType={todoFilterType}\n              setFilterType={setTodoFilterType}\n            />\n\n            {activeTodos < todos.length && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={deleteCompleted}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        </>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nexport const App: React.FC = () => {\n  return (\n    <TodoApp />\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}